openapi: 3.0.0
info:
  description: openweathermap API
  title: openweathermap API
  version: v1
  x-sla: >-
    http://repo.designer.governify.io:10880/antgamdia/api_modeling_paper/modeling/openweathermap/plans.oai-at?accessToken=165a1761634db1e9bd304ea6f3ffcf2b
externalDocs:
  url: 'https://openweathermap.org/api'
paths:
  /data/2.5/box/city:
    get:
      description: Something
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/someResponseBody'
  /data/2.5/find:
    get:
      description: Something
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/someResponseBody'
  /data/2.5/forecast:
    get:
      description: Something
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/someResponseBody'
  /data/2.5/forecast/daily:
    get:
      description: Something
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/someResponseBody'
  /data/2.5/group:
    get:
      description: Something
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/someResponseBody'
  /data/2.5/history/accumulated_precipitation:
    get:
      description: Something
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/someResponseBody'
  /data/2.5/history/accumulated_temperature:
    get:
      description: Something
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/someResponseBody'
  /data/2.5/history/city:
    get:
      description: Something
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/someResponseBody'
  /data/2.5/uvi:
    get:
      description: Something
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/someResponseBody'
  /data/2.5/uvi/forecast:
    get:
      description: Something
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/someResponseBody'
  /data/2.5/uvi/history:
    get:
      description: Something
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/someResponseBody'
  /data/2.5/weather:
    get:
      description: Something
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/someResponseBody'
  /data/3.0/triggers:
    get:
      description: Something
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/someResponseBody'
  '/data/3.0/triggers/{trigger_id}':
    get:
      description: Something
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/someResponseBody'
  '/data/3.0/triggers/{trigger_id}/history':
    get:
      description: Something
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/someResponseBody'
  '/data/3.0/triggers/{trigger_id}/history/{history_id}':
    get:
      description: Something
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/someResponseBody'
  '/maps/2.0/relief/{z}/{x}/{y}':
    get:
      description: Something
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/someResponseBody'
  '/maps/2.0/weather/PA0/{z}/{x}/{y}':
    get:
      description: Something
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/someResponseBody'
  '/maps/2.0/weather/TA2/{z}/{x}/{y}':
    get:
      description: Something
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/someResponseBody'
  '/maps/2.0/weather/WND/{z}/{x}/{y}':
    get:
      description: Something
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/someResponseBody'
  '/maps/2.0/weather/{op}/{z}/{x}/{y}':
    get:
      description: Something
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/someResponseBody'
  /sample/:
    get:
      description: Something
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/someResponseBody'
  /weather-data:
    get:
      description: Something
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/someResponseBody'
components:
  requestBodies:
    someRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/someRequestBody'
      required: true
  securitySchemes: {}
  schemas:
    someRequestBody: {}
    someResponseBody: {}
